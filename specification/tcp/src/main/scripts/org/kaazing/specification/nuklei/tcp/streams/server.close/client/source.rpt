#
# Copyright 2007-2016, Kaazing Corporation. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

property newInitialRef ${nuklei:newReferenceId()} # external scope

property nuklei ${nuklei:directory("target/nukleus-itests").streamsCapacity(1024 * 1024, 64 * 1024)}

property sourceInitial ${nuklei.streams("tcp", "source")}
property sourceReply ${nuklei.streams("source", "tcp#target")}

property newInitialId ${nuklei:newStreamId()}
property newCorrelationId ${nuklei:newCorrelationId()}

connect await ROUTED_INITIAL
        agrona://stream/bidirectional
        option reader ${agrona:oneToOneReader(sourceInitial.throttle)}
        option writer ${agrona:oneToOneWriter(sourceInitial.buffer)}
connected

write [0x00 0x00 0x00 0x01]
write ${newInitialId}
write ${newInitialRef}
write ${newCorrelationId}
write flush

read [0x40 0x00 0x00 0x02]
read ${newInitialId}
read [0..4]

close
closed

connect await ROUTED_REPLY
        agrona://stream/bidirectional
        option reader ${agrona:oneToOneReader(sourceReply.buffer)}
        option writer ${agrona:oneToOneWriter(sourceReply.throttle)}
connected

read [0x00 0x00 0x00 0x01]
read ([0..8]:replyId)
read ([0..8]:replyRef)
read ${newCorrelationId}
read ([0..8]:localAddress)
read ([0..8]:remoteAddress)

read [0x00 0x00 0x00 0x03]
read ${replyId}

close
closed
