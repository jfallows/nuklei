#
# Copyright 2007-2016, Kaazing Corporation. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

property nuklei ${nuklei:directory("target/nukleus-itests").streamsCapacity(1024 * 1024, 64 * 1024)}

property targetInitial ${nuklei.streams("target", "tcp#source")}
property targetReply ${nuklei.streams("tcp", "target")}

connect await ROUTED
        agrona://stream/bidirectional
        option reader ${agrona:oneToOneReader(targetInitial.buffer)}
        option writer ${agrona:oneToOneWriter(targetInitial.throttle)}
connected

read [0x00 0x00 0x00 0x01]
read ([0..8]:targetId)
read ([0..8]:targetRef)
read ([0..8]:targetReplyId)
read ([0..8]:targetReplyRef)
read ([0..8]:targetAddress)
read ([0..8]:sourceAddress)

write [0x40 0x00 0x00 0x02]
write ${targetId}
write [0x00 0x02 0x00 0x00]
write flush

write notify WINDOW_UPDATED

read [0x00 0x00 0x00 0x02]
read ${targetId}
read [0x0d] "client data 1"
read notify DATA_RECEIVED_1

write [0x40 0x00 0x00 0x02]
write ${targetId}
write [0x0d 0x00 0x00 0x00]
write flush

read [0x00 0x00 0x00 0x02]
read ${targetId}
read [0x0d] "client data 2"
read notify DATA_RECEIVED_2

write [0x40 0x00 0x00 0x02]
write ${targetId}
write [0x0d 0x00 0x00 0x00]
write flush

close
closed

connect await ROUTED
        agrona://stream/bidirectional
        option reader ${agrona:oneToOneReader(targetReply.throttle)}
        option writer ${agrona:oneToOneWriter(targetReply.buffer)}
connected

write await WINDOW_UPDATED

write [0x00 0x00 0x00 0x01]
write ${targetReplyId}
write ${targetReplyRef}
write ${targetId}
write ${targetRef}
write ${sourceAddress}
write ${targetAddress}
write flush

read [0x40 0x00 0x00 0x02]
read ${targetReplyId}
read [0..4]

write await DATA_RECEIVED_1
write [0x00 0x00 0x00 0x02]
write ${targetReplyId}
write [0x0d] "server data 1"
write flush

write await DATA_RECEIVED_2
write [0x00 0x00 0x00 0x02]
write ${targetReplyId}
write [0x0d] "server data 2"
write flush

read [0x40 0x00 0x00 0x02]
read ${targetReplyId}
read [0..4] # TODO: read int 13 option byteorder native

read [0x40 0x00 0x00 0x02]
read ${targetReplyId}
read [0..4] # TODO: read int 13 option byteorder native

close
closed
