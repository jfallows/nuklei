#
# Copyright 2007-2016, Kaazing Corporation. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

property newTargetInitialRef ${nuklei:newReferenceId()} # external scope
property newSourceReplyRef ${nuklei:newReferenceId()} # external scope

property nuklei ${nuklei:directory("target/nukleus-itests").streamsCapacity(1024 * 1024, 64 * 1024)}

property sourceInitial ${nuklei.streams("http", "source")}
property targetInitial ${nuklei.streams("target", "http#source")}
property targetReply ${nuklei.streams("http", "target")}
property sourceReply ${nuklei.streams("reply", "http#target")}

property newTargetInitialId ${nuklei:newStreamId()}
property newSourceReplyId ${nuklei:newStreamId()}
property newTargetCorrelationId ${nuklei:newCorrelationId()}

connect await ROUTED_INITIAL
        agrona://stream/bidirectional
        option reader ${agrona:oneToOneReader(sourceInitial.buffer)}
        option writer ${agrona:oneToOneWriter(sourceInitial.throttle)}
connected

read [0x00 0x00 0x00 0x01]
read ([0..8]:initialId)
read ([0..8]:initialRef)
read ([0..8]:correlationId)
read [0x00]

write [0x40 0x00 0x00 0x02]
write ${initialId}
write [0x00 0x02 0x00 0x00]
write flush

read [0x00 0x00 0x00 0x02]
read ${initialId}
read [0x50]
read "GET / HTTP/1.1\r\n"
read "Host: localhost:8080\r\n"
read "Connection: Upgrade\r\n"
read "Upgrade: protocol\r\n"
read "\r\n"

read notify REQUEST_HEADERS_RECEIVED

write [0x40 0x00 0x00 0x02]
write ${initialId}
write [0x50 0x00 0x00 0x00]
write flush

read [0x00 0x00 0x00 0x02]
read ${initialId}
read [0x17]
read "custom protocol payload"

read notify REQUEST_PAYLOAD_RECEIVED

write [0x40 0x00 0x00 0x02]
write ${initialId}
write [0x28 0x00 0x00 0x00]
write flush

close
closed

connect await ROUTED_INITIAL
        agrona://stream/bidirectional
        option reader ${agrona:oneToOneReader(targetInitial.throttle)}
        option writer ${agrona:oneToOneWriter(targetInitial.buffer)}
connected

write await REQUEST_HEADERS_RECEIVED

write [0x00 0x00 0x00 0x01]
write ${newTargetInitialId}
write ${newTargetInitialRef}
write ${newTargetCorrelationId}
write [0x5f]
write [0x00] [0x07] ":scheme" [0x04] "http"
write [0x00] [0x07] ":method" [0x03] "GET"
write [0x00] [0x05] ":path" [0x01] "/"
write [0x00] [0x04] "host" [0x0e] "localhost:8080"
write [0x00] [0x0a] "connection" [0x07] "Upgrade"
write [0x00] [0x07] "upgrade" [0x08] "protocol" 
write flush

read [0x40 0x00 0x00 0x02]
read ${newTargetInitialId}
read [0..4]

write await REQUEST_PAYLOAD_RECEIVED

write [0x00 0x00 0x00 0x02]
write ${newTargetInitialId}
write [0x17]
write "custom protocol payload"
write flush

read [0x40 0x00 0x00 0x02]
read ${newTargetInitialId}
read [0..4]

close
closed

connect await ROUTED_REPLY
        agrona://stream/bidirectional
        option reader ${agrona:oneToOneReader(targetReply.buffer)}
        option writer ${agrona:oneToOneWriter(targetReply.throttle)}
connected

read [0x00 0x00 0x00 0x01]
read ([0..8]:targetReplyId)
read ([0..8]:targetReplyRef)
read ${newTargetCorrelationId}
read [0x1f]
read [0x00] [0x07] ":status" [0x03] "101"
read [0x00] [0x07] "upgrade" [0x08] "protocol"

read notify HTTP_RESPONSE_HEADERS_RECEIVED

write [0x40 0x00 0x00 0x02]
write ${targetReplyId}
write [0x00 0x02 0x00 0x00]
write flush

read [0x00 0x00 0x00 0x02]
read ${targetReplyId}
read [0x17]
read "custom protocol payload"

read notify HTTP_RESPONSE_PAYLOAD_RECEIVED

write [0x40 0x00 0x00 0x02]
write ${targetReplyId}
write [0x28 0x00 0x00 0x00]
write flush

close
closed

connect await ROUTED_REPLY
        agrona://stream/bidirectional
        option reader ${agrona:oneToOneReader(sourceReply.throttle)}
        option writer ${agrona:oneToOneWriter(sourceReply.buffer)}
connected

write await HTTP_RESPONSE_HEADERS_RECEIVED

write [0x00 0x00 0x00 0x01]
write ${newSourceReplyId}
write ${newSourceReplyRef}
write ${correlationId}
write [0x00]
write flush

read [0x40 0x00 0x00 0x02]
read ${newSourceReplyId}
read [0..4]

write [0x00 0x00 0x00 0x02]
write ${newSourceReplyId}
write [0x37]
write "HTTP/1.1 101 Switching Protocols\r\n"
write"Upgrade: protocol\r\n"
write "\r\n"
write flush

read [0x40 0x00 0x00 0x02]
read ${newSourceReplyId}
read [0..4]

write await HTTP_RESPONSE_PAYLOAD_RECEIVED

write [0x00 0x00 0x00 0x02]
write ${newSourceReplyId}
write [0x17]
write "custom protocol payload"
write flush

read [0x40 0x00 0x00 0x02]
read ${newSourceReplyId}
read [0..4]

close
closed
