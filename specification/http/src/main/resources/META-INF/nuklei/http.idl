/*
 * Copyright 2007-2016, Kaazing Corporation. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
scope http
{
    struct Header
    {
        int8 representation;
        string name;
        string value;
    }

    scope control
    {
        struct Error extends common::control::Error
        {
        }


        struct Bind extends common::control::Bind
        {
        }

        struct Bound extends common::control::Bound
        {
        }

        struct Unbind extends common::control::Unbind
        {
        }

        struct Unbound extends common::control::Unbound
        {
        }

        struct Prepare extends common::control::Prepare
        {
        }

        struct Prepared extends common::control::Prepared
        {
        }

        struct Unprepare extends common::control::Unprepare
        {
        }

        struct Unprepared extends common::control::Unprepared
        {
        }

        struct Route extends common::control::Route
        {
            list<http::Header> headers;
        }

        struct Routed extends common::control::Routed
        {
            list<http::Header> headers;
        }

        struct Unroute extends common::control::Unroute
        {
            list<http::Header> headers;
        }

        struct Unrouted extends common::control::Unrouted
        {
            list<http::Header> headers;
        }

    }

    scope stream
    {
        struct HttpBegin extends common::stream::Begin
        {
            list<http::Header> headers;
        }

        struct HttpData extends common::stream::Data
        {
            // TODO: chunk
        }

        struct HttpEnd extends common::stream::End
        {
            // TODO: trailers
        }

        struct HttpReset extends common::stream::Reset
        {
        }

        struct HttpWindow extends common::stream::Window
        {
        }
    }
}