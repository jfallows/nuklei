#
# Copyright 2007-2016, Kaazing Corporation. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

property newTargetRef ${nuklei:newInitialRef()} # external scope

property nuklei = ${nuklei:directory("target/nukleus-itests").streamsCapacity(1024 * 1024, 64 * 1024)};

property sourceInitial ${nuklei.streams("ws", "source")}
property sourceReply ${nuklei.streams("reply", "ws#target")}

property targetInitial ${nuklei.streams("target", "ws#source")}
property targetReply ${nuklei.streams("ws", "target")}

property newTargetId ${nuklei:newStreamId()}
property newTargetReplyId ${nuklei:newStreamId()}
property newTargetReplyRef ${nuklei:newReplyRef()}

connect await ROUTED
        agrona://stream/bidirectional
        option reader ${agrona:manyToOneReader(sourceInitial.buffer)}
        option writer ${agrona:manyToOneWriter(sourceReply.buffer)}
connected

read [0x00 0x00 0x00 0x01]
read ([0..8]:sourceId)
read ([0..8]:sourceRef)
read ([0..8]:sourceReplyId)
read ([0..8]:sourceReplyRef)
read [0x00] [0x07] ":scheme" [0x04] "http"
read [0x00] [0x07] ":method" [0x03] "GET"
read [0x00] [0x05] ":path" [0x05] "/echo"
read [0x00] [0x04] "host" [0x0e] "localhost:8080"
read [0x00] [0x07] "upgrade" [0x09] "websocket"
read [0x00] [0x0a] "connection" [0x07] "upgrade"
read [0x00] [0x11] "sec-websocket-key" [0x18] /(?<key>[a-zA-Z0-9+\/=]{24})/
read [0x00] [0x15] "sec-websocket-version" [0x02] "13"

write [0x00 0x00 0x00 0x01]
write ${sourceReplyId}
write ${sourceReplyRef}
write ${sourceId}
write ${sourceRef}
write [0x00] [0x07] ":status" [0x03] "101"
write [0x00] [0x07] "upgrade" [0x09] "websocket"
write [0x00] [0x0a] "connection" [0x07] "upgrade"
write [0x00] [0x14] "sec-websocket-accept" [0x1c] ${ws:handshakeHash(key)}
write flush

close
closed

connect await ROUTED
        agrona://stream/bidirectional
        option reader ${agrona:manyToOneReader(targetReply.buffer)}
        option writer ${agrona:manyToOneWriter(targetInitial.buffer)}
connected

write [0x00 0x00 0x00 0x01]
write ${newTargetId}
write ${newTargetRef}
write ${newTargetReplyId}
write ${newTargetReplyRef}
write flush

read [0x00 0x00 0x00 0x01]
read ([0..8]:targetReplyId)
read ([0..8]:targetReplyRef)
read ${newTargetId}
read ${newTargetRef}

close
closed
